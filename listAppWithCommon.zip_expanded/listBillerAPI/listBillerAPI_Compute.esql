PATH Fidelity_Bank_GhIPSS_Common;
CREATE COMPUTE MODULE getBillersListOnRTPDb
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN

		CREATE FIELD Environment.values;
		DECLARE envValRef REFERENCE TO Environment.values;
		SET envValRef.application_name = ApplicationLabel;
		SET envValRef.msgId = InputRoot.JSON.Data.institutionId;
		SET envValRef.ccsidRef = InputRoot.Properties.CodedCharSetId;
		SET envValRef.encodeRef = InputRoot.Properties.Encoding;

		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		CREATE LASTCHILD OF OutputRoot.JSON NAME 'Data';
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data;
		DECLARE billerData ROW;
		--Logging code Start
		SET envValRef.logData = getCastedPayLoad(InputRoot.JSON,envValRef);
		CALL prepareGhIPSSLogger('ChannelRequest',envValRef,OutputRoot);
		--Logging code End


		SET billerData.values[] = SELECT * FROM Database.billers AS a WHERE a.institutionId = (envValRef.msgId);		


		IF EXISTS(billerData.values[]) THEN
			CREATE LASTCHILD OF outRef IDENTITY(JSON.Array)billers;
			DECLARE valRef REFERENCE TO billerData.values;
			DECLARE index INTEGER 1;
			WHILE LASTMOVE(valRef) DO
				SET outRef.billers.Item[index].institutionId = valRef.INSTITUTIONID;
				SET outRef.billers.Item[index].billerId = valRef.BILLERID;
				SET outRef.billers.Item[index].name = valRef.NAME;
				SET outRef.billers.Item[index].accountNumber = valRef.ACCOUNTNUMBER;
				SET outRef.billers.Item[index].branchCode = valRef.BRANCHCODE;
				SET outRef.billers.Item[index].callBackUrl = valRef.CALLBACKURL;
				SET outRef.billers.Item[index].requestSource = valRef.REQUESTSOURCE;
				MOVE valRef NEXTSIBLING;
				SET index = index+1;
			END WHILE;
			SET outRef.errorCode = '200';
			SET outRef.errorDescription = 'success';
		ELSE
			SET outRef.response = 'No InstitutionId(' || InputRoot.JSON.Data.institutionId ||') found in the table BILLERS';
		END IF;
		--Logging code Start
		SET envValRef.logData = getCastedPayLoad(OutputRoot.JSON,envValRef);
		CALL prepareGhIPSSLogger('ChannelResponse',envValRef,OutputRoot);
		--Logging code End
	END;
END MODULE;